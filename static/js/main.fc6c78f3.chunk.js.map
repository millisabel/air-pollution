{"version":3,"sources":["assets/logo/logo_1.svg","assets/logo/logo_2.svg","assets/logo/logo_3.svg","assets/slider/slide-1.jpg","assets/slider/slide-2.jpg","assets/slider/slide-3.jpg","assets/slider/slide-4.jpg","assets/slider/slide-5.jpg","assets/sectors/sectors_1.jpg","assets/sectors/sectors_2.jpg","assets/sectors/sectors_3.jpg","assets/sectors/sectors_4.jpg","assets/sectors/sectors_5.jpg","assets/sectors/sectors_6.jpg","components/nav/nav.js","components/header/header.js","components/slider/sliderItem.js","components/slider/slider.js","components/facts/facts.js","components/airQuality/airQuality.js","components/sectors/sectorsItem.js","components/sectors/sectors.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","links","onClick","navLinks","map","link","i","href","className","key","title","Header","logos","logosImages","logo","src","alt","useState","isMenuOpen","setMenuStatus","closeMenu","navMenu","minDeviceWidth","matches","SliderItem","children","params","SwiperCore","use","Navigation","Pagination","Controller","Slider","slides","slideItems","slide","imgUrl","desc","slideImgThumbs","gallerySwiperRef","useRef","thumbnailSwiperRef","useEffect","gallerySwiper","current","swiper","thumbnailSwiper","controller","control","spaceBetween","slidesPerView","slidesPerGroup","pagination","clickable","navigation","nextEl","prevEl","breakpoints","900","1300","ref","slideToClickedSlide","Facts","id","mapboxgl","accessToken","AirQuality","mapContainer","lng","lat","zoom","locationInfo","Map","container","style","center","SectorsItem","sector","number","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","background","backgroundSize","name","description","Sectors","subtitle","itemsList","items","Footer","partnersLogos","partners","App","logo1","logo2","logo3","factsSlides","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fc6c78f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_1.24e064dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_2.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_3.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.b16f6325.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.dd95c71c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.c1ce7f53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.f4d0fc38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.ebb023ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_1.61cc1648.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_2.91feae3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_3.02cd1c72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_4.f9eebf67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_5.cb7774c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sectors_6.3792da8d.jpg\";","import React from 'react';\r\nimport \"./nav.scss\";\r\n\r\nconst Nav = ({links, onClick}) => {\r\n    const navLinks = links.map((link, i) => <a href={link.href} className=\"menu__item\" key={i} onClick={() => onClick()}>{link.title}</a>);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"menu\">\r\n                <div className=\"menu__control\">\r\n                    <button className=\"btn btn--close\"\r\n                            onClick = {() => onClick()}\r\n                    />\r\n                    <button className=\"btn btn--menu\"\r\n                            onClick = {() => onClick()}\r\n                    ><span/></button>\r\n                </div>\r\n                <nav className=\"menu__links\">{navLinks} </nav>\r\n                <div className=\"menu__copy\">\r\n                    <p>2020, Все права защищены</p>\r\n                    <span>Согласие на обработку персональных данных</span>\r\n                    <span>Политика конфиденциальности</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React, {useState} from 'react';\r\nimport MediaQuery from 'react-responsive';\r\nimport Nav from \"../nav/nav\";\r\nimport \"./header.scss\";\r\nimport \"./btn.scss\";\r\n\r\nconst Header = ({title, logos, links}) => {\r\n    const logosImages = logos.map((logo, i) => <img src={logo} alt=\"partner logo\" className=\"header__partners-item\" key={i}/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} className=\"header__nav-item\" key={i}>{link.title}</a>);\r\n\r\n    let [isMenuOpen, setMenuStatus] = useState(false);\r\n    const closeMenu = () => {\r\n        setMenuStatus(!isMenuOpen);\r\n    };\r\n    const navMenu = <Nav links={links} onClick={closeMenu}/>;\r\n\r\n    return (\r\n        <section className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__wrap\">\r\n                    <div className=\"header__partners\">\r\n                        {logosImages}\r\n                    </div>\r\n                    <button className=\"btn btn--menu\"\r\n                            onClick = {() => closeMenu()}\r\n                    ><span/></button>\r\n                </div>\r\n                <MediaQuery minDeviceWidth={1300}>\r\n                    {(matches) =>\r\n                        matches\r\n                            ? <div className=\"header__nav\">{navLinks}</div>\r\n                            : <div>{isMenuOpen ? navMenu : null}</div>\r\n                    }\r\n                </MediaQuery>\r\n                <h1 className=\"header__title\">{title}</h1>\r\n                <a href=\"#maps\" className=\"header__btn\">Отследить</a>\r\n                <div className=\"header__toBottom\"> </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst SliderItem = ({ children, ...params }) => (\r\n    <div {...params}>\r\n        <span>{children}</span>\r\n    </div>\r\n);\r\n\r\nexport default SliderItem;","import React, {useEffect,  useRef} from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// import Swiper from 'react-id-swiper';\r\nimport SwiperCore, {Navigation, Pagination, Controller} from 'swiper';\r\n\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nimport SlideItem from \"./sliderItem\";\r\n\r\nimport \"./slider.scss\"\r\n\r\nSwiperCore.use([Navigation, Pagination, Controller]);\r\n\r\nconst Slider = ({slides}) => {\r\n\r\n    const slideItems= slides.map((slide, i) => (\r\n        <SwiperSlide key={i}>\r\n            <SlideItem key={`slide_${[i]}`} className=\"\">\r\n                <div className=\"slider__item\">\r\n                    <img\r\n                        className=\"slider__img\"\r\n                        src={slide.imgUrl}\r\n                        alt=\"slide\"\r\n                    />\r\n                    <p className=\"slider__desc\">\r\n                        {slide.desc}\r\n                    </p>\r\n                </div>\r\n            </SlideItem>\r\n        </SwiperSlide>\r\n\r\n        )\r\n    );\r\n\r\n    const slideImgThumbs = slides.map((slide, i) => (\r\n        <SwiperSlide key={i}>\r\n            <SlideItem key={`slide_${i}`} className=\"\">\r\n                <img\r\n                    className=\"slider__thumbs\"\r\n                    src={slide.imgUrl}\r\n                    alt=\"preview slide\"\r\n                />\r\n            </SlideItem>\r\n        </SwiperSlide>\r\n        )\r\n    );\r\n\r\n    const gallerySwiperRef = useRef(null);\r\n    const thumbnailSwiperRef = useRef(null);\r\n\r\n    let thumbsParams = {\r\n        slideToClickedSlide: true,\r\n        slidesPerView: 2,\r\n    };\r\n\r\n    let params = {\r\n        spaceBetween: 10,\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        pagination: {clickable: true},\r\n        navigation: {\r\n            nextEl: '.swiper-button-next',\r\n            prevEl: '.swiper-button-prev',\r\n        },\r\n        breakpoints: {\r\n            900:\r\n                {\r\n                    slidesPerView: 2,\r\n                    spaceBetween: 10,\r\n                    slidesPerGroup: 2,\r\n                },\r\n            1300:\r\n                {\r\n                    slidesPerView: 3,\r\n                    spaceBetween: 40,\r\n                    slidesPerGroup: 3,\r\n                },\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        const gallerySwiper = gallerySwiperRef.current.swiper;\r\n        const thumbnailSwiper = thumbnailSwiperRef.current.swiper;\r\n        if (gallerySwiper.controller && thumbnailSwiper.controller\r\n        ) {\r\n            gallerySwiper.controller.control = thumbnailSwiper;\r\n            thumbnailSwiper.controller.control = gallerySwiper;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            <div className=\"slider__container\">\r\n                    <Swiper {...params} ref={gallerySwiperRef}>\r\n                        {slideItems}\r\n                    </Swiper>\r\n\r\n            </div>\r\n            <div className=\"slider__containerThumbs\">\r\n                <Swiper {...thumbsParams} ref={thumbnailSwiperRef}>\r\n                    {slideImgThumbs}\r\n                </Swiper>\r\n            </div>\r\n\r\n            <div className=\"swiper-button-prev\"/>\r\n            <div className=\"swiper-button-next\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;","import React from \"react\";\r\nimport Slider from \"../slider/slider\";\r\n\r\nimport \"./facts.scss\";\r\n\r\nconst Facts = ({title, slides}) => {\r\n    return (\r\n        <section className=\"facts\" id=\"facts\">\r\n            <div className=\"container\">\r\n                <h2 className=\"facts__title\">{title}</h2>\r\n                <Slider slides={slides}/>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useEffect, useRef, useState} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nimport \"./airQuality.scss\";\r\n\r\nmapboxgl.accessToken = \"pk.eyJ1IjoibWlsbGlzYWJlbCIsImEiOiJja2ZsYWxwNGEyMHdlMnFvM29jbHRrZjMxIn0.S_6mZS48JL4QacAXwGxVzQ\";\r\n\r\nconst AirQuality = ({title}) => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 5\r\n    });\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"maps\" id=\"maps\">\r\n            <div className=\"container\">\r\n                <h2 className=\"maps__title\">{title}</h2>\r\n                <div className=\"maps__map\" ref={mapContainer}/>\r\n                <p className=\"maps__text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество\r\n                    воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React, {useState} from 'react';\r\n\r\nconst SectorsItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false);\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    };\r\n\r\n    return (\r\n        <div  className={isToolTipShowing ? \"sectors__item sectors__item--open\" : \"sectors__item\"}\r\n             onMouseEnter={() => toggleToolTip(true)}\r\n             onMouseLeave={() => toggleToolTip(false)}\r\n             style={{\r\n                 background: `url(${sector.imgUrl}) center no-repeat`,\r\n                 backgroundSize: 'cover'\r\n             }}\r\n        >\r\n\r\n            <p className=\"sectors__item-name\"\r\n               onClick={() => toggleToolTip(true)}\r\n            >\r\n                {sector.name}\r\n            </p>\r\n            {\r\n                isToolTipShowing && <p className={`sectors__item-tooltip ${\r\n                    isDirectionSwitched\r\n                        ? \"sectors__item-switched\"\r\n                        : \"\"\r\n                }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n            <button className=\"sectors__item-btn\"\r\n                    onClick={() => toggleToolTip(false)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectorsItem;","import React from 'react';\r\n\r\nimport SectorItem from \"./sectorsItem\";\r\nimport \"./sectors.scss\"\r\n\r\nconst Sectors = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector} number={i+1} key={i}/>);\r\n\r\n    return (\r\n        <section className=\"sectors\" id=\"sectors\">\r\n            <div className=\"container\">\r\n                <h2 className=\"sectors__title\">{title}</h2>\r\n                <p className=\"sectors__subtitle\">{subtitle}</p>\r\n                <div className=\"sectors__list\">\r\n                    {itemsList}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Sectors;","import React from 'react';\r\n\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = ({links, partners}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'} className=\"footer__partners-item\"/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer__nav-link'}>{link.title}</a>)\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer__partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n\r\n                <div className=\"footer__wrap\">\r\n                    <div className=\"footer__nav\">\r\n                        {navLinks}\r\n                    </div>\r\n\r\n                    <p className=\"footer__text\">\r\n                        Сайт был разработан <span>Козловой Еленой</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span>Валерией Бубырь</span>.\r\n                    </p>\r\n                </div>\r\n\r\n                <p className=\"footer__copy\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer__copy\">\r\n                    <span>Согласие на обработку персональных данных</span>\r\n                    <span>Политика конфиденциальности</span>\r\n                     <br/>\r\n\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.scss';\n\nimport Header from \"./components/header/header\";\nimport Facts from \"./components/facts/facts\";\nimport AirQuality from \"./components/airQuality/airQuality\";\nimport Sectors from \"./components/sectors/sectors\";\nimport Footer from \"./components/footer/footer\";\n\nimport logo1 from './assets/logo/logo_1.svg';\nimport logo2 from './assets/logo/logo_2.svg';\nimport logo3 from './assets/logo/logo_3.svg';\n\n\n\nfunction App() {\n    const partners = [\n        logo1,\n        logo2,\n        logo3\n    ];\n    const navLinks = [\n        {\n            title: \"Основные факты\",\n            href: \"#facts\"\n        },\n        {\n            title: \"Индекс качества воздуха\",\n            href: \"#maps\"\n        },\n        {\n            title: \"Политика по уменьшению загрязнений\",\n            href: \"#sectors\"\n        }\n    ];\n    const factsSlides = [\n        {\n            id: \"slide-1\",\n            imgUrl: require(\"./assets/slider/slide-1.jpg\"),\n            desc: \"Женщины и дети – главные жертвы загрязнения воздуха\"\n        },\n        {\n            id: \"slide-2\",\n            imgUrl: require(\"./assets/slider/slide-2.jpg\"),\n            desc: \"Защитники окружающей среды подвергаются преследованиям\"\n        },\n        {\n            id: \"slide-3\",\n            imgUrl: require(\"./assets/slider/slide-3.jpg\"),\n            desc: \"Загрязнение воздуха – нарушение прав человека\"\n        },\n        {\n            id: \"slide-4\",\n            imgUrl: require(\"./assets/slider/slide-4.jpg\"),\n            desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения \\n\" +\n                \"атмосферного воздуха\"\n        },\n        {\n            id: \"slide-5\",\n            imgUrl: require(\"./assets/slider/slide-5.jpg\"),\n            desc: \"Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\n        }\n    ];\n    const sectors = [\n        {\n            name: \"Промышленность\",\n            imgUrl: require(\"./assets/sectors/sectors_1.jpg\"),\n            description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\n        },\n        {\n            name: \"Транспорт\",\n            imgUrl: require(\"./assets/sectors/sectors_2.jpg\"),\n            description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\n        },\n        {\n            name: \"Городское планирование\",\n            imgUrl: require(\"./assets/sectors/sectors_3.jpg\"),\n            description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\n        },\n        {\n            name: \"Энергия\",\n            imgUrl: require(\"./assets/sectors/sectors_4.jpg\"),\n            description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\n        },\n        {\n            name: \"Энергетика\",\n            imgUrl: require(\"./assets/sectors/sectors_5.jpg\"),\n            description: \"Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\n        },\n        {\n            name: \"Утилизация отходов\",\n            imgUrl: require(\"./assets/sectors/sectors_6.jpg\"),\n            description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\n        },\n    ];\n\n  return (\n    <>\n      <Header\n          title=\"Качество атмосферного воздуха и здоровье\"\n          logos={partners}\n          links={navLinks}/>\n      <Facts\n          title=\"Основные факты\"\n          slides={factsSlides}\n      />\n      <AirQuality\n          title=\"Индекс качества воздуха в режиме реального времени\"\n      />\n      <Sectors\n          title=\"Политика по уменьшению загрязнений\"\n          subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n          items={sectors}\n      />\n      <Footer\n          links={navLinks}\n          partners={partners}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}